{
  "contractName": "LarTokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160e08062002083833981018060405260e08110156200003357600080fd5b508051602082015160408301516060840151608085015160a086015160c0909601516000805460ff191660011790559495939492939192909190808383868a8a8a821515620000e357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f43726f776473616c653a20726174652069732030000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038216151562000146576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806200202e6025913960400191505060405180910390fd5b6001600160a01b0381161515620001a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806200200a6024913960400191505060405180910390fd5b600292909255600180546001600160a01b039283166001600160a01b0319909116179055600080549190921661010002610100600160a81b03199091161790558015156200025857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f43617070656443726f776473616c653a20636170206973203000000000000000604482015290519081900360640190fd5b60045542821015620002b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018062001fa06033913960400191505060405180910390fd5b81811162000310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603781526020018062001fd36037913960400191505060405180910390fd5b6005919091556006556007805460ff191690558015156200039257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f526566756e6461626c6543726f776473616c653a20676f616c20697320300000604482015290519081900360640190fd5b620003a26200047960201b60201c565b604051620003b09062000488565b6001600160a01b03909116815260405190819003602001906000f080158015620003de573d6000803e3d6000fd5b50600980546001600160a01b03199081166001600160a01b0393841617909155600892909255600a8054909216908716179055838111156200046c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620020536030913960400191505060405180910390fd5b5050505050505062000496565b6001546001600160a01b031690565b610e26806200117a83390190565b610cd480620004a66000396000f3fe6080604052600436106100f35760003560e01c80634f9359451161008a578063b7a8807c11610059578063b7a8807c14610243578063bffa55d514610258578063ec8ac4d81461028b578063fc0c546a146102b1576100f3565b80634f935945146101d3578063521eb273146101e85780637d3d652214610219578063b3f05b971461022e576100f3565b80634042b66f116100c65780634042b66f1461017f57806347535d7b146101945780634b6753bc146101a95780634bb278f3146101be576100f3565b80631515bc2b146101055780632c4e722e1461012e578063355274ea14610155578063401938831461016a575b6101036100fe6102c6565b6102ca565b005b34801561011157600080fd5b5061011a6103f1565b604080519115158252519081900360200190f35b34801561013a57600080fd5b506101436103f9565b60408051918252519081900360200190f35b34801561016157600080fd5b506101436103ff565b34801561017657600080fd5b50610143610405565b34801561018b57600080fd5b5061014361040b565b3480156101a057600080fd5b5061011a610411565b3480156101b557600080fd5b5061014361042c565b3480156101ca57600080fd5b50610103610432565b3480156101df57600080fd5b5061011a610515565b3480156101f457600080fd5b506101fd610529565b604080516001600160a01b039092168252519081900360200190f35b34801561022557600080fd5b5061011a610538565b34801561023a57600080fd5b5061011a610545565b34801561024f57600080fd5b5061014361054e565b34801561026457600080fd5b506101036004803603602081101561027b57600080fd5b50356001600160a01b0316610554565b610103600480360360208110156102a157600080fd5b50356001600160a01b03166102ca565b3480156102bd57600080fd5b506101fd61064f565b3390565b60005460ff1615156103265760408051600160e51b62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6000805460ff191690553461033b8282610663565b6000610346826106cf565b60035490915061035c908363ffffffff6106ec16565b6003556103698382610750565b826001600160a01b031661037b6102c6565b6001600160a01b03167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36103cd83836106cb565b6103d561075a565b6103df83836106cb565b50506000805460ff1916600117905550565b600654421190565b60025490565b60045490565b60085490565b60035490565b6000600554421015801561042757506006544211155b905090565b60065490565b60075460ff161561047757604051600160e51b62461bcd028152600401808060200182810382526027815260200180610c156027913960400191505060405180910390fd5b61047f6103f1565b15156104d55760408051600160e51b62461bcd02815260206004820181905260248201527f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f736564604482015290519081900360640190fd5b6007805460ff191660011790556104ea6107bb565b6040517f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183690600090a1565b600060045461052261040b565b1015905090565b6001546001600160a01b031690565b600060085461052261040b565b60075460ff1690565b60055490565b61055c610545565b151561059c57604051600160e51b62461bcd028152600401808060200182810382526022815260200180610c876022913960400191505060405180910390fd5b6105a4610538565b156105e357604051600160e51b62461bcd028152600401808060200182810382526021815260200180610c3c6021913960400191505060405180910390fd5b60095460408051600160e01b6351cff8d90281526001600160a01b038481166004830152915191909216916351cff8d991602480830192600092919082900301818387803b15801561063457600080fd5b505af1158015610648573d6000803e3d6000fd5b5050505050565b60005461010090046001600160a01b031690565b61066b610411565b15156106c15760408051600160e51b62461bcd02815260206004820152601860248201527f54696d656443726f776473616c653a206e6f74206f70656e0000000000000000604482015290519081900360640190fd5b6106cb828261083b565b5050565b60006106e6600254836108b690919063ffffffff16565b92915050565b6000828201838110156107495760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6106cb8282610916565b6009546001600160a01b031663f340fa01346107746102c6565b6040518363ffffffff1660e01b815260040180826001600160a01b03166001600160a01b031681526020019150506000604051808303818588803b15801561063457600080fd5b6107c3610538565b1561083157600a60009054906101000a90046001600160a01b03166001600160a01b0316633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505050505b6108396109ff565b565b6108458282610b52565b6004546108608261085461040b565b9063ffffffff6106ec16565b11156106cb5760408051600160e51b62461bcd02815260206004820152601d60248201527f43617070656443726f776473616c653a20636170206578636565646564000000604482015290519081900360640190fd5b60008215156108c7575060006106e6565b8282028284828115156108d657fe5b041461074957604051600160e51b62461bcd028152600401808060200182810382526021815260200180610bf46021913960400191505060405180910390fd5b61091e61064f565b6001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b505050506040513d60208110156109a757600080fd5b505115156106cb5760408051600160e51b62461bcd02815260206004820152601f60248201527f4d696e74656443726f776473616c653a206d696e74696e67206661696c656400604482015290519081900360640190fd5b610a07610538565b15610ae157600960009054906101000a90046001600160a01b03166001600160a01b03166343d726d66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b50505050610b4a565b600960009054906101000a90046001600160a01b03166001600160a01b0316638c52dc416040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b3157600080fd5b505af1158015610b45573d6000803e3d6000fd5b505050505b610839610839565b6001600160a01b0382161515610b9c57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610c5d602a913960400191505060405180910390fd5b8015156106cb5760408051600160e51b62461bcd02815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564526566756e6461626c6543726f776473616c653a20676f616c207265616368656443726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564a165627a7a72305820d349c99957da598522e8f5168d4f6ac6e49f95b00a7a018d246217482cd8c82d0029608060405234801561001057600080fd5b50604051602080610e268339810180604052602081101561003057600080fd5b5051600061004361012a602090811b901c565b600080546001600160a01b0383166001600160a01b0319909116811790915560408051918252519192507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9919081900360200190a1506001600160a01b03811615156100fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610df9602d913960400191505060405180910390fd5b6002805460ff196001600160a01b039390931661010002610100600160a81b03199091161791909116905561012e565b3390565b610cbc8061013d6000396000f3fe6080604052600436106100a75760003560e01c80638c52dc41116100645780638c52dc41146101d45780639af6549a146101e9578063c19d93fb146101fe578063c6dbdf6114610237578063e3a9db1a1461024c578063f340fa0114610291576100a7565b80632348238c146100ac57806338af3eed146100e157806343d726d61461011257806351cff8d9146101275780636809691a1461015a578063685ca1941461018d575b600080fd5b3480156100b857600080fd5b506100df600480360360208110156100cf57600080fd5b50356001600160a01b03166102b7565b005b3480156100ed57600080fd5b506100f66103b1565b604080516001600160a01b039092168252519081900360200190f35b34801561011e57600080fd5b506100df6103c5565b34801561013357600080fd5b506100df6004803603602081101561014a57600080fd5b50356001600160a01b03166104aa565b34801561016657600080fd5b506100df6004803603602081101561017d57600080fd5b50356001600160a01b03166104ff565b34801561019957600080fd5b506101c0600480360360208110156101b057600080fd5b50356001600160a01b03166105cc565b604080519115158252519081900360200190f35b3480156101e057600080fd5b506100df6105e8565b3480156101f557600080fd5b506100df6106ce565b34801561020a57600080fd5b5061021361075f565b6040518082600281111561022357fe5b60ff16815260200191505060405180910390f35b34801561024357600080fd5b506100f6610768565b34801561025857600080fd5b5061027f6004803603602081101561026f57600080fd5b50356001600160a01b0316610777565b60408051918252519081900360200190f35b6100df600480360360208110156102a757600080fd5b50356001600160a01b0316610792565b6000546001600160a01b03166102cb6107ed565b6001600160a01b03161461031357604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b6001600160a01b038116151561035d57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610c09602a913960400191505060405180910390fd5b600080546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99181900360200190a150565b60025461010090046001600160a01b031690565b6000546001600160a01b03166103d96107ed565b6001600160a01b03161461042157604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b60006002805460ff169081111561043457fe5b1461047357604051600160e51b62461bcd028152600401808060200182810382526029815260200180610be06029913960400191505060405180910390fd5b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b6104b3816105cc565b15156104f357604051600160e51b62461bcd028152600401808060200182810382526033815260200180610bad6033913960400191505060405180910390fd5b6104fc816107f1565b50565b6000546001600160a01b03166105136107ed565b6001600160a01b03161461055b57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b6001600160a01b0381166000818152600160205260408120805491905590610589908263ffffffff6108db16565b6040805182815290516001600160a01b038416917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050565b600060016002805460ff16908111156105e157fe5b1492915050565b6000546001600160a01b03166105fc6107ed565b6001600160a01b03161461064457604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b60006002805460ff169081111561065757fe5b1461069657604051600160e51b62461bcd028152600401808060200182810382526032815260200180610c5f6032913960400191505060405180910390fd5b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b6002805460ff16818111156106df57fe5b1461071e57604051600160e51b62461bcd028152600401808060200182810382526038815260200180610b106038913960400191505060405180910390fd5b6002546040516001600160a01b036101009092049190911690303180156108fc02916000818181858888f193505050501580156104fc573d6000803e3d6000fd5b60025460ff1690565b6000546001600160a01b031690565b6001600160a01b031660009081526001602052604090205490565b60006002805460ff16908111156107a557fe5b146107e457604051600160e51b62461bcd02815260040180806020018281038252602b815260200180610b82602b913960400191505060405180910390fd5b6104fc816109ce565b3390565b6000546001600160a01b03166108056107ed565b6001600160a01b03161461084d57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b6001600160a01b038116600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610897573d6000803e3d6000fd5b506040805182815290516001600160a01b038416917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050565b30318111156109345760408051600160e51b62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461097f576040519150601f19603f3d011682016040523d82523d6000602084013e610984565b606091505b505090508015156109c957604051600160e51b62461bcd02815260040180806020018281038252603a815260200180610b48603a913960400191505060405180910390fd5b505050565b6000546001600160a01b03166109e26107ed565b6001600160a01b031614610a2a57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c33602c913960400191505060405180910390fd5b6001600160a01b0381166000908152600160205260409020543490610a55908263ffffffff610aab16565b6001600160a01b038316600081815260016020908152604091829020939093558051848152905191927f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c492918290030190a25050565b600082820183811015610b085760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420616c6c6f77656420746f207769746864726177526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c65206163746976655365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665a165627a7a72305820886f4262a28abc4f239dcf3d098dc0c09e3af4b10f54abdc3ed33b37b60730f80029526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f206164647265737354696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d6554696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d6543726f776473616c653a20746f6b656e20697320746865207a65726f206164647265737343726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373596f757220676f616c2063616e6e6f742062652067726561746572207468616e20746865206d6178696d756d20636170",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80634f9359451161008a578063b7a8807c11610059578063b7a8807c14610243578063bffa55d514610258578063ec8ac4d81461028b578063fc0c546a146102b1576100f3565b80634f935945146101d3578063521eb273146101e85780637d3d652214610219578063b3f05b971461022e576100f3565b80634042b66f116100c65780634042b66f1461017f57806347535d7b146101945780634b6753bc146101a95780634bb278f3146101be576100f3565b80631515bc2b146101055780632c4e722e1461012e578063355274ea14610155578063401938831461016a575b6101036100fe6102c6565b6102ca565b005b34801561011157600080fd5b5061011a6103f1565b604080519115158252519081900360200190f35b34801561013a57600080fd5b506101436103f9565b60408051918252519081900360200190f35b34801561016157600080fd5b506101436103ff565b34801561017657600080fd5b50610143610405565b34801561018b57600080fd5b5061014361040b565b3480156101a057600080fd5b5061011a610411565b3480156101b557600080fd5b5061014361042c565b3480156101ca57600080fd5b50610103610432565b3480156101df57600080fd5b5061011a610515565b3480156101f457600080fd5b506101fd610529565b604080516001600160a01b039092168252519081900360200190f35b34801561022557600080fd5b5061011a610538565b34801561023a57600080fd5b5061011a610545565b34801561024f57600080fd5b5061014361054e565b34801561026457600080fd5b506101036004803603602081101561027b57600080fd5b50356001600160a01b0316610554565b610103600480360360208110156102a157600080fd5b50356001600160a01b03166102ca565b3480156102bd57600080fd5b506101fd61064f565b3390565b60005460ff1615156103265760408051600160e51b62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6000805460ff191690553461033b8282610663565b6000610346826106cf565b60035490915061035c908363ffffffff6106ec16565b6003556103698382610750565b826001600160a01b031661037b6102c6565b6001600160a01b03167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36103cd83836106cb565b6103d561075a565b6103df83836106cb565b50506000805460ff1916600117905550565b600654421190565b60025490565b60045490565b60085490565b60035490565b6000600554421015801561042757506006544211155b905090565b60065490565b60075460ff161561047757604051600160e51b62461bcd028152600401808060200182810382526027815260200180610c156027913960400191505060405180910390fd5b61047f6103f1565b15156104d55760408051600160e51b62461bcd02815260206004820181905260248201527f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f736564604482015290519081900360640190fd5b6007805460ff191660011790556104ea6107bb565b6040517f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183690600090a1565b600060045461052261040b565b1015905090565b6001546001600160a01b031690565b600060085461052261040b565b60075460ff1690565b60055490565b61055c610545565b151561059c57604051600160e51b62461bcd028152600401808060200182810382526022815260200180610c876022913960400191505060405180910390fd5b6105a4610538565b156105e357604051600160e51b62461bcd028152600401808060200182810382526021815260200180610c3c6021913960400191505060405180910390fd5b60095460408051600160e01b6351cff8d90281526001600160a01b038481166004830152915191909216916351cff8d991602480830192600092919082900301818387803b15801561063457600080fd5b505af1158015610648573d6000803e3d6000fd5b5050505050565b60005461010090046001600160a01b031690565b61066b610411565b15156106c15760408051600160e51b62461bcd02815260206004820152601860248201527f54696d656443726f776473616c653a206e6f74206f70656e0000000000000000604482015290519081900360640190fd5b6106cb828261083b565b5050565b60006106e6600254836108b690919063ffffffff16565b92915050565b6000828201838110156107495760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6106cb8282610916565b6009546001600160a01b031663f340fa01346107746102c6565b6040518363ffffffff1660e01b815260040180826001600160a01b03166001600160a01b031681526020019150506000604051808303818588803b15801561063457600080fd5b6107c3610538565b1561083157600a60009054906101000a90046001600160a01b03166001600160a01b0316633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505050505b6108396109ff565b565b6108458282610b52565b6004546108608261085461040b565b9063ffffffff6106ec16565b11156106cb5760408051600160e51b62461bcd02815260206004820152601d60248201527f43617070656443726f776473616c653a20636170206578636565646564000000604482015290519081900360640190fd5b60008215156108c7575060006106e6565b8282028284828115156108d657fe5b041461074957604051600160e51b62461bcd028152600401808060200182810382526021815260200180610bf46021913960400191505060405180910390fd5b61091e61064f565b6001600160a01b03166340c10f1983836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b505050506040513d60208110156109a757600080fd5b505115156106cb5760408051600160e51b62461bcd02815260206004820152601f60248201527f4d696e74656443726f776473616c653a206d696e74696e67206661696c656400604482015290519081900360640190fd5b610a07610538565b15610ae157600960009054906101000a90046001600160a01b03166001600160a01b03166343d726d66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b50505050610b4a565b600960009054906101000a90046001600160a01b03166001600160a01b0316638c52dc416040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b3157600080fd5b505af1158015610b45573d6000803e3d6000fd5b505050505b610839610839565b6001600160a01b0382161515610b9c57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610c5d602a913960400191505060405180910390fd5b8015156106cb5760408051600160e51b62461bcd02815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015290519081900360640190fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564526566756e6461626c6543726f776473616c653a20676f616c207265616368656443726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564a165627a7a72305820d349c99957da598522e8f5168d4f6ac6e49f95b00a7a018d246217482cd8c82d0029",
  "sourceMap": "1166:959:1:-;;;1311:466;8:9:-1;5:2;;;30:1;27;20:12;5:2;1311:466:1;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1311:466:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:11:26;:18;;-1:-1:-1;;1421:18:26;1435:4;1421:18;;;1311:466:1;;;;;;;;;;;;;;;;;;2409:8:7;;;2401:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2460:20:7;;;;2452:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2540:28:7;;;;2532:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:5;:12;;;;2642:7;:16;;-1:-1:-1;;;;;2642:16:7;;;-1:-1:-1;;;;;;2642:16:7;;;;;;-1:-1:-1;2668:14:7;;;;;;2642:16;2668:14;-1:-1:-1;;;;;;2668:14:7;;;;;;482:7:11;;;474:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:4;:10;1064:15:12;1049:30;;;1041:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:25;;;1198:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:12;:26;;;;1338:12;:26;446:10:8;:18;;-1:-1:-1;;446:18:8;;;1262:8:9;;;1254:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:8;:6;;;:8;;:::i;:::-;1325:26;;;;;:::i;:::-;-1:-1:-1;;;;;1325:26:9;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1315:7:9;:36;;-1:-1:-1;;;;;;1315:36:9;;;-1:-1:-1;;;;;1315:36:9;;;;;;;1361:5;:12;;;;1658::1;:30;;;;;;;;;;;1703:13;;;;1695:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:466;;;;;;;1166:959;;3258:87:7;3331:7;;-1:-1:-1;;;;;3331:7:7;3258:87;:::o;1166:959:1:-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1166:959:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3017:23:7;3027:12;:10;:12::i;:::-;3017:9;:23::i;:::-;1166:959:1;2117:156:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:156:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;3430:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3430:75:7;;;:::i;:::-;;;;;;;;;;;;;;;;609:73:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:73:11;;;:::i;1462:75:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1462:75:9;;;:::i;3568:85:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3568:85:7;;;:::i;1764:189:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:189:12;;;:::i;1590:89::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1590:89:12;;;:::i;801:262:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:262:8;;;:::i;800:92:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:92:11;;;:::i;3258:87:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3258:87:7;;;:::i;:::-;;;;-1:-1:-1;;;;;3258:87:7;;;;;;;;;;;;;;2046:94:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2046:94:9;;;:::i;561:82:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:82:8;;;:::i;1436:89:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:89:12;;;:::i;1687:236:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1687:236:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1687:236:9;-1:-1:-1;;;;;1687:236:9;;:::i;3910:605:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3910:605:7;-1:-1:-1;;;;;3910:605:7;;:::i;3106:76::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3106:76:7;;;:::i;788:96:3:-;867:10;788:96;:::o;3910:605:7:-;1934:11:26;;;;1926:55;;;;;;;-1:-1:-1;;;;;1926:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:5;2056:19;;-1:-1:-1;;2056:19:26;;;4008:9:7;4027:44;4048:11;4008:9;4027:20;:44::i;:::-;4130:14;4147:26;4163:9;4147:15;:26::i;:::-;4221:10;;4130:43;;-1:-1:-1;4221:25:7;;4236:9;4221:25;:14;:25;:::i;:::-;4208:10;:38;4257:37;4274:11;4287:6;4257:16;:37::i;:::-;4339:11;-1:-1:-1;;;;;4309:61:7;4325:12;:10;:12::i;:::-;-1:-1:-1;;;;;4309:61:7;;4352:9;4363:6;4309:61;;;;;;;;;;;;;;;;;;;;;;;;4381:46;4404:11;4417:9;4381:22;:46::i;:::-;4438:15;:13;:15::i;:::-;4463:45;4485:11;4498:9;4463:21;:45::i;:::-;-1:-1:-1;;2230:11:26;:18;;-1:-1:-1;;2230:18:26;2244:4;2230:18;;;-1:-1:-1;3910:605:7:o;2117:156:12:-;2254:12;;2236:15;:30;2117:156;:::o;3430:75:7:-;3493:5;;3430:75;:::o;609:73:11:-;671:4;;609:73;:::o;1462:75:9:-;1525:5;;1462:75;:::o;3568:85:7:-;3636:10;;3568:85;:::o;1764:189:12:-;1803:4;1899:12;;1880:15;:31;;:66;;;;;1934:12;;1915:15;:31;;1880:66;1873:73;;1764:189;:::o;1590:89::-;1660:12;;1590:89;:::o;801:262:8:-;847:10;;;;846:11;838:63;;;;-1:-1:-1;;;;;838:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:11;:9;:11::i;:::-;911:56;;;;;;;-1:-1:-1;;;;;911:56:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:10;:17;;-1:-1:-1;;978:17:8;991:4;978:17;;;1006:15;:13;:15::i;:::-;1036:20;;;;;;;801:262::o;800:92:11:-;843:4;881;;866:11;:9;:11::i;:::-;:19;;859:26;;800:92;:::o;3258:87:7:-;3331:7;;-1:-1:-1;;;;;3331:7:7;3258:87;:::o;2046:94:9:-;2090:4;2128:5;;2113:11;:9;:11::i;561:82:8:-;626:10;;;;561:82;:::o;1436:89:12:-;1506:12;;1436:89;:::o;1687:236:9:-;1759:11;:9;:11::i;:::-;1751:58;;;;;;-1:-1:-1;;;;;1751:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:13;:11;:13::i;:::-;1827:14;1819:60;;;;-1:-1:-1;;;;;1819:60:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:7;;:26;;;-1:-1:-1;;;;;1890:26:9;;-1:-1:-1;;;;;1890:26:9;;;;;;;;;:7;;;;;:16;;:26;;;;;:7;;:26;;;;;;;:7;;:26;;;5:2:-1;;;;30:1;27;20:12;5:2;1890:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1890:26:9;;;;1687:236;:::o;3106:76:7:-;3144:6;3169;;;;-1:-1:-1;;;;;3169:6:7;;3106:76::o;2466:165:12:-;672:8;:6;:8::i;:::-;664:45;;;;;;;-1:-1:-1;;;;;664:45:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:50;2601:11;2614:9;2574:26;:50::i;:::-;2466:165;;:::o;7358:120:7:-;7425:7;7451:20;7465:5;;7451:9;:13;;:20;;;;:::i;:::-;7444:27;7358:120;-1:-1:-1;;7358:120:7:o;834:176:14:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:14:o;6560:134:7:-;6647:40;6662:11;6675;6647:14;:40::i;2568:97:9:-;2612:7;;-1:-1:-1;;;;;2612:7:9;:15;2634:9;2645:12;:10;:12::i;:::-;2612:46;;;;;;;;;;;;;-1:-1:-1;;;;;2612:46:9;-1:-1:-1;;;;;2612:46:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1868:252:1;1984:13;:11;:13::i;:::-;1981:104;;;2052:12;;;;;;;;;-1:-1:-1;;;;;2052:12:1;-1:-1:-1;;;;;2038:35:1;;:37;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2038:37:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2038:37:1;;;;1981:104;2093:21;:19;:21::i;:::-;1868:252::o;1088:237:11:-;1182:50;1209:11;1222:9;1182:26;:50::i;:::-;1280:4;;1250:26;1266:9;1250:11;:9;:11::i;:::-;:15;:26;:15;:26;:::i;:::-;:34;;1242:76;;;;;-1:-1:-1;;;;;1242:76:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459:14;2217:7;2458:6;;2454:45;;;-1:-1:-1;2487:1:14;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;2544;;;;;;;;:10;2536:56;;;;-1:-1:-1;;;;;2536:56:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:309:10;711:7;:5;:7::i;:::-;-1:-1:-1;;;;;689:36:10;;726:11;739;689:62;;;;;;;;;;;;;-1:-1:-1;;;;;689:62:10;-1:-1:-1;;;;;689:62:10;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:62:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;689:62:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;689:62:10;668:144;;;;;;;-1:-1:-1;;;;;668:144:10;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:238:9;2282:13;:11;:13::i;:::-;2278:156;;;2311:7;;;;;;;;;-1:-1:-1;;;;;2311:7:9;-1:-1:-1;;;;;2311:13:9;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2311:15:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2311:15:9;;;;2340:7;;;;;;;;;-1:-1:-1;;;;;2340:7:9;-1:-1:-1;;;;;2340:27:9;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2340:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2340:29:9;;;;2278:156;;;2400:7;;;;;;;;;-1:-1:-1;;;;;2400:7:9;-1:-1:-1;;;;;2400:21:9;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2400:23:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2400:23:9;;;;2278:156;2444:21;:19;:21::i;5057:376:7:-;-1:-1:-1;;;;;5159:25:7;;;;5151:80;;;;-1:-1:-1;;;;;5151:80:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:14;;;5241:52;;;;;-1:-1:-1;;;;;5241:52:7;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"@openzeppelin/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"@openzeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"@openzeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"@openzeppelin/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\nimport \"@openzeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\n// import \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\n// import \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\r\n// import \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\r\n// import \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\n// import \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\r\n// import \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\r\n// import \"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\";\r\n\r\n\r\n\r\n\r\ncontract LarTokenCrowdsale is Crowdsale, MintedCrowdsale, CappedCrowdsale, TimedCrowdsale, RefundableCrowdsale {\r\n\r\n  address tokenAddress;\r\n\r\n  constructor(\r\n    uint256 _rate,\r\n    address payable _wallet,\r\n    ERC20 _token,\r\n    uint256 _cap,\r\n    uint256 _openingTime,\r\n    uint256 _closingTime,\r\n    uint256 _goal\r\n  )\r\n    Crowdsale(_rate, _wallet, _token)\r\n    CappedCrowdsale(_cap)\r\n    TimedCrowdsale(_openingTime, _closingTime)\r\n    RefundableCrowdsale(_goal)\r\n    public\r\n  {\r\n    tokenAddress = address(_token);\r\n    require(_goal <= _cap, \"Your goal cannot be greater than the maximum cap\");\r\n\r\n  }\r\n\r\n   /**\r\n   * @dev enables token transfers, called when owner calls finalize()\r\n  */\r\n  function _finalization() internal {\r\n    // Any functionality after the end of the crowdsale is added here.\r\n    if(goalReached()) {\r\n\r\n      // Unpause the token\r\n      ERC20Pausable(tokenAddress).unpause();\r\n\r\n    }\r\n\r\n    super._finalization();\r\n  }\r\n\r\n}",
  "sourcePath": "C:/Users/LanreAkintayo/Visual Studio code projects/crowdsale_bsc/contracts/LARTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/Users/LanreAkintayo/Visual Studio code projects/crowdsale_bsc/contracts/LARTokenCrowdsale.sol",
    "exportedSymbols": {
      "LarTokenCrowdsale": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/Crowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/Crowdsale.sol",
        "id": 29,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 771,
        "src": "27:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 30,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 992,
        "src": "86:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1066,
        "src": "160:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1216,
        "src": "236:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 963,
        "src": "311:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2377,
        "src": "393:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2479,
        "src": "458:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2548,
        "src": "523:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 770,
              "src": "1196:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$770",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "1196:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 991,
              "src": "1207:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$991",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "1207:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1065,
              "src": "1224:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1065",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "1224:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1215,
              "src": "1241:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1215",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "1241:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 45,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 962,
              "src": "1257:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$962",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:19:1"
          }
        ],
        "contractDependencies": [
          198,
          770,
          830,
          962,
          991,
          1065,
          1215,
          2872
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          962,
          830,
          1215,
          1065,
          991,
          770,
          2872,
          198
        ],
        "name": "LarTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 48,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 114,
            "src": "1284:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1284:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1651:126:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1658:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1681:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$2290",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$2290",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1673:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1673:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1658:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1703:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1703:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220676f616c2063616e6e6f742062652067726561746572207468616e20746865206d6178696d756d20636170",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1718:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        },
                        "value": "Your goal cannot be greater than the maximum cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2890,
                        2891
                      ],
                      "referencedDeclaration": 2891,
                      "src": "1695:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:74:1"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50,
                    "src": "1505:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "1512:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 67,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "1521:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2290",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 770,
                  "src": "1495:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$770_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1495:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 70,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1550:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 71,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 69,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1065,
                  "src": "1534:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1065_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1534:21:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1576:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1590:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1215,
                  "src": "1561:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1215_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1561:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "1629:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 78,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 962,
                  "src": "1609:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$962_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1609:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1329:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1349:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1379:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2290",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 53,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2290,
                    "src": "1379:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2290",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1398:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1417:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1444:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1471:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1322:167:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:1"
            },
            "scope": 114,
            "src": "1311:466:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1902:218:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 97,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "1984:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 106,
                  "nodeType": "IfStatement",
                  "src": "1981:104:1",
                  "trueBody": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1999:86:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 100,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "2052:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99,
                                "name": "ERC20Pausable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2478,
                                "src": "2038:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$2478_$",
                                  "typeString": "type(contract ERC20Pausable)"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2038:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Pausable_$2478",
                                "typeString": "contract ERC20Pausable"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1302,
                            "src": "2038:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2038:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2038:37:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2952,
                        "src": "2093:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_LarTokenCrowdsale_$114",
                          "typeString": "contract super LarTokenCrowdsale"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "2093:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:21:1"
                }
              ]
            },
            "documentation": "@dev enables token transfers, called when owner calls finalize()\r",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1902:0:1"
            },
            "scope": 114,
            "src": "1868:252:1",
            "stateMutability": "nonpayable",
            "superFunction": 945,
            "visibility": "internal"
          }
        ],
        "scope": 115,
        "src": "1166:959:1"
      }
    ],
    "src": "0:2125:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/LanreAkintayo/Visual Studio code projects/crowdsale_bsc/contracts/LARTokenCrowdsale.sol",
    "exportedSymbols": {
      "LarTokenCrowdsale": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/Crowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/Crowdsale.sol",
        "id": 29,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 771,
        "src": "27:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 30,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 992,
        "src": "86:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1066,
        "src": "160:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1216,
        "src": "236:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "@openzeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 963,
        "src": "311:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2377,
        "src": "393:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2479,
        "src": "458:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 2548,
        "src": "523:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 770,
              "src": "1196:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$770",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "1196:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 991,
              "src": "1207:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$991",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "1207:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1065,
              "src": "1224:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1065",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "1224:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1215,
              "src": "1241:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1215",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "1241:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 45,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 962,
              "src": "1257:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$962",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "1257:19:1"
          }
        ],
        "contractDependencies": [
          198,
          770,
          830,
          962,
          991,
          1065,
          1215,
          2872
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          962,
          830,
          1215,
          1065,
          991,
          770,
          2872,
          198
        ],
        "name": "LarTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 48,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 114,
            "src": "1284:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1284:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1651:126:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1658:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1681:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$2290",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$2290",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1673:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1673:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1658:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1703:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1703:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220676f616c2063616e6e6f742062652067726561746572207468616e20746865206d6178696d756d20636170",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1718:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        },
                        "value": "Your goal cannot be greater than the maximum cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2890,
                        2891
                      ],
                      "referencedDeclaration": 2891,
                      "src": "1695:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:74:1"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50,
                    "src": "1505:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "1512:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 67,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54,
                    "src": "1521:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2290",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 770,
                  "src": "1495:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$770_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1495:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 70,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1550:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 71,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 69,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1065,
                  "src": "1534:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1065_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1534:21:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1576:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1590:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 75,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 72,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1215,
                  "src": "1561:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1215_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1561:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "1629:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 78,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 962,
                  "src": "1609:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$962_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1609:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1329:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1349:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1379:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2290",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 53,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2290,
                    "src": "1379:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2290",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1398:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1417:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1444:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1471:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1322:167:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:1"
            },
            "scope": 114,
            "src": "1311:466:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1902:218:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 97,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "1984:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 106,
                  "nodeType": "IfStatement",
                  "src": "1981:104:1",
                  "trueBody": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1999:86:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 100,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "2052:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 99,
                                "name": "ERC20Pausable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2478,
                                "src": "2038:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$2478_$",
                                  "typeString": "type(contract ERC20Pausable)"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2038:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Pausable_$2478",
                                "typeString": "contract ERC20Pausable"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1302,
                            "src": "2038:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2038:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2038:37:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2952,
                        "src": "2093:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_LarTokenCrowdsale_$114",
                          "typeString": "contract super LarTokenCrowdsale"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "2093:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:21:1"
                }
              ]
            },
            "documentation": "@dev enables token transfers, called when owner calls finalize()\r",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1902:0:1"
            },
            "scope": 114,
            "src": "1868:252:1",
            "stateMutability": "nonpayable",
            "superFunction": 945,
            "visibility": "internal"
          }
        ],
        "scope": 115,
        "src": "1166:959:1"
      }
    ],
    "src": "0:2125:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2022-04-30T14:49:21.218Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful.",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}