{
  "contractName": "LarTokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526000600760146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405160e080620021b883398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050808383868a8a8a600083111515620000a357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620000e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200011d57600080fd5b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600081111515620001b857600080fd5b8060048190555050428210151515620001d057600080fd5b818110151515620001e057600080fd5b8160058190555080600681905550505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000811115156200024157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200026e620003b6565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015620002c1573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050838111151515620003a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f596f757220676f616c2063616e6e6f742062652067726561746572207468616e81526020017f20746865206d6178696d756d206361700000000000000000000000000000000081525060400191505060405180910390fd5b50505050505050620003c7565b604051610beb80620015cd83390190565b6111f680620003d76000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101125780632c4e722e14610141578063355274ea1461016c57806340193883146101975780634042b66f146101c25780634b6753bc146101ed5780634bb278f3146102185780634f9359451461022f578063521eb2731461025e578063715018a6146102b55780637d3d6522146102cc5780638d4e4083146102fb5780638da5cb5b1461032a578063b5545a3c14610381578063b7a8807c14610398578063ec8ac4d8146103c3578063f2fde38b146103f9578063fbfa77cf1461043c578063fc0c546a14610493575b610110336104ea565b005b34801561011e57600080fd5b506101276105b8565b604051808215151515815260200191505060405180910390f35b34801561014d57600080fd5b506101566105c4565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816105ca565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6105d0565b6040518082815260200191505060405180910390f35b3480156101ce57600080fd5b506101d76105d6565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102026105dc565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061022d6105e2565b005b34801561023b57600080fd5b506102446106be565b604051808215151515815260200191505060405180910390f35b34801561026a57600080fd5b506102736106cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca6106f3565b005b3480156102d857600080fd5b506102e16107f8565b604051808215151515815260200191505060405180910390f35b34801561030757600080fd5b50610310610807565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f61081a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038d57600080fd5b50610396610840565b005b3480156103a457600080fd5b506103ad610946565b6040518082815260200191505060405180910390f35b6103f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b005b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b005b34801561044857600080fd5b506104516109b4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049f57600080fd5b506104a86109da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104fa83836109ff565b61050382610a2c565b905061051a82600354610a4a90919063ffffffff16565b60038190555061052a8382610a66565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36105a18383610a74565b6105a9610a78565b6105b38383610b50565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063e57600080fd5b600760149054906101000a900460ff1615151561065a57600080fd5b6106626105b8565b151561066d57600080fd5b610675610b54565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561074f57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561085b57600080fd5b6108636107f8565b15151561086f57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109a857600080fd5b6109b181610daa565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005544210158015610a1357506006544211155b1515610a1e57600080fd5b610a288282610ea6565b5050565b6000610a4360025483610ed990919063ffffffff16565b9050919050565b60008183019050828110151515610a5d57fe5b80905092915050565b610a708282610f11565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b5050505050565b5050565b600080610b5f6107f8565b15610d9e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff16637d64bcb46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050505b610da661101f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610de657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610eb08282611178565b600454610ec882600354610a4a90919063ffffffff16565b11151515610ed557600080fd5b5050565b600080831415610eec5760009050610f0b565b8183029050818382811515610efd57fe5b04141515610f0757fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b505050506040513d6020811015610fff57600080fd5b8101908080519060200190929190505050151561101b57600080fd5b5050565b6110276107f8565b156110cf57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156110b257600080fd5b505af11580156110c6573d6000803e3d6000fd5b5050505061116e565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561115557600080fd5b505af1158015611169573d6000803e3d6000fd5b505050505b6111766111c8565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111b457600080fd5b600081141515156111c457600080fd5b5050565b5600a165627a7a7230582047b3e3862732d5b50b3dff007c4592250824768086dc907da6feabb096e437170029608060405234801561001057600080fd5b50604051602080610beb83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100af57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083600281111561010f57fe5b021790555050610ac7806101246000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d6146100a9578063521eb273146100c0578063715018a6146101175780638c52dc411461012e5780638da5cb5b14610145578063c19d93fb1461019c578063cb13cddb146101d5578063f2fde38b1461022c578063f340fa011461026f578063fa89401a146102a5575b600080fd5b3480156100b557600080fd5b506100be6102e8565b005b3480156100cc57600080fd5b506100d5610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012357600080fd5b5061012c61046e565b005b34801561013a57600080fd5b50610143610570565b005b34801561015157600080fd5b5061015a610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101b1610676565b604051808260028111156101c157fe5b60ff16815260200191505060405180910390f35b3480156101e157600080fd5b50610216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610689565b6040518082815260200191505060405180910390f35b34801561023857600080fd5b5061026d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a1565b005b6102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610708565b005b3480156102b157600080fd5b506102e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082f565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034357600080fd5b6000600281111561035057fe5b600260149054906101000a900460ff16600281111561036b57fe5b14151561037757600080fd5b60028060146101000a81548160ff0219169083600281111561039557fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610445573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105cb57600080fd5b600060028111156105d857fe5b600260149054906101000a900460ff1660028111156105f357fe5b1415156105ff57600080fd5b6001600260146101000a81548160ff0219169083600281111561061e57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fc57600080fd5b61070581610985565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076357600080fd5b6000600281111561077057fe5b600260149054906101000a900460ff16600281111561078b57fe5b14151561079757600080fd5b6107e934600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7f90919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561083e57fe5b600260149054906101000a900460ff16600281111561085957fe5b14151561086557600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610932573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109c157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183019050828110151515610a9257fe5b809050929150505600a165627a7a723058209c663976285d96cf16a8c96e9b9d2de28e061f1262051c833ac1d8610b2fd5eb0029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101125780632c4e722e14610141578063355274ea1461016c57806340193883146101975780634042b66f146101c25780634b6753bc146101ed5780634bb278f3146102185780634f9359451461022f578063521eb2731461025e578063715018a6146102b55780637d3d6522146102cc5780638d4e4083146102fb5780638da5cb5b1461032a578063b5545a3c14610381578063b7a8807c14610398578063ec8ac4d8146103c3578063f2fde38b146103f9578063fbfa77cf1461043c578063fc0c546a14610493575b610110336104ea565b005b34801561011e57600080fd5b506101276105b8565b604051808215151515815260200191505060405180910390f35b34801561014d57600080fd5b506101566105c4565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816105ca565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6105d0565b6040518082815260200191505060405180910390f35b3480156101ce57600080fd5b506101d76105d6565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102026105dc565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061022d6105e2565b005b34801561023b57600080fd5b506102446106be565b604051808215151515815260200191505060405180910390f35b34801561026a57600080fd5b506102736106cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca6106f3565b005b3480156102d857600080fd5b506102e16107f8565b604051808215151515815260200191505060405180910390f35b34801561030757600080fd5b50610310610807565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f61081a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038d57600080fd5b50610396610840565b005b3480156103a457600080fd5b506103ad610946565b6040518082815260200191505060405180910390f35b6103f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b005b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b005b34801561044857600080fd5b506104516109b4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049f57600080fd5b506104a86109da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104fa83836109ff565b61050382610a2c565b905061051a82600354610a4a90919063ffffffff16565b60038190555061052a8382610a66565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36105a18383610a74565b6105a9610a78565b6105b38383610b50565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063e57600080fd5b600760149054906101000a900460ff1615151561065a57600080fd5b6106626105b8565b151561066d57600080fd5b610675610b54565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561074f57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561085b57600080fd5b6108636107f8565b15151561086f57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109a857600080fd5b6109b181610daa565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005544210158015610a1357506006544211155b1515610a1e57600080fd5b610a288282610ea6565b5050565b6000610a4360025483610ed990919063ffffffff16565b9050919050565b60008183019050828110151515610a5d57fe5b80905092915050565b610a708282610f11565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b5050505050565b5050565b600080610b5f6107f8565b15610d9e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff16637d64bcb46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050505b610da661101f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610de657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610eb08282611178565b600454610ec882600354610a4a90919063ffffffff16565b11151515610ed557600080fd5b5050565b600080831415610eec5760009050610f0b565b8183029050818382811515610efd57fe5b04141515610f0757fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b505050506040513d6020811015610fff57600080fd5b8101908080519060200190929190505050151561101b57600080fd5b5050565b6110276107f8565b156110cf57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156110b257600080fd5b505af11580156110c6573d6000803e3d6000fd5b5050505061116e565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561115557600080fd5b505af1158015611169573d6000803e3d6000fd5b505050505b6111766111c8565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111b457600080fd5b600081141515156111c457600080fd5b5050565b5600a165627a7a7230582047b3e3862732d5b50b3dff007c4592250824768086dc907da6feabb096e437170029",
  "sourceMap": "587:1078:1:-;;;384:5:3;358:31;;;;;;;;;;;;;;;;;;;;705:419:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;705:419:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:5;962:12;976;936:4;891:5;898:7;907:6;1952:1:2;1944:5;:9;1936:18;;;;;;;;1987:1;1968:21;;:7;:21;;;;1960:30;;;;;;;;2022:1;2004:20;;:6;:20;;;;1996:29;;;;;;;;2039:5;2032:4;:12;;;;2059:7;2050:6;;:16;;;;;;;;;;;;;;;;;;2080:6;2072:5;;:14;;;;;;;;;;;;;;;;;;1865:226;;;472:1:7;465:4;:8;457:17;;;;;;;;486:4;480:3;:10;;;;418:77;886:15:8;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;575:10:11;567:5;;:18;;;;;;;;;;;;;;;;;;753:1:4;745:5;:9;737:18;;;;;;;;785:6;;;;;;;;;;;769:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;769:23:4;761:5;;:31;;;;;;;;;;;;;;;;;;805:5;798:4;:12;;;;697:118;1061:4:1;1052:5;:13;;1044:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:419;;;;;;;587:1078;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "587:1078:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:21:2;2331:10;2321:9;:21::i;:::-;587:1078:1;1169:153:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:19:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:19:2;;;;;;;;;;;;;;;;;;;;;;;252:18:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:18:7;;;;;;;;;;;;;;;;;;;;;;;493:19:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;493:19:4;;;;;;;;;;;;;;;;;;;;;;;1284:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1284:24:2;;;;;;;;;;;;;;;;;;;;;;;292:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:8;;;;;;;;;;;;;;;;;;;;;;;560:163:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:3;;;;;;603:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:83:7;;;;;;;;;;;;;;;;;;;;;;;;;;;932:21:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;932:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:11;;;;;;1137:85:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1137:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;903:121:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;903:121:4;;;;;;262:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:8;;;;;;;;;;;;;;;;;;;;;;;2483:577:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;870:18:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:577;2546:17;2677:14;2566:9;2546:29;;2581:45;2602:12;2616:9;2581:20;:45::i;:::-;2694:26;2710:9;2694:15;:26::i;:::-;2677:43;;2759:24;2773:9;2759;;:13;;:24;;;;:::i;:::-;2747:9;:36;;;;2790:38;2807:12;2821:6;2790:16;:38::i;:::-;2878:12;2839:88;;2860:10;2839:88;;;2898:9;2915:6;2839:88;;;;;;;;;;;;;;;;;;;;;;;;2934:47;2957:12;2971:9;2934:22;:47::i;:::-;2988:15;:13;:15::i;:::-;3009:46;3031:12;3045:9;3009:21;:46::i;:::-;2483:577;;;:::o;1169:153:8:-;1211:4;1306:11;;1288:15;:29;1281:36;;1169:153;:::o;1234:19:2:-;;;;:::o;252:18:7:-;;;;:::o;493:19:4:-;;;;:::o;1284:24:2:-;;;;:::o;292:26:8:-;;;;:::o;560:163:3:-;719:5:11;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:3;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;603:83:7:-;646:4;678:3;;665:9;;:16;;658:23;;603:83;:::o;932:21:2:-;;;;;;;;;;;;;:::o;827:111:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;1137:85:4:-;1181:4;1213;;1200:9;;:17;;1193:24;;1137:85;:::o;358:31:3:-;;;;;;;;;;;;;:::o;238:20:11:-;;;;;;;;;;;;;:::o;903:121:4:-;947:11;;;;;;;;;;;939:20;;;;;;;;974:13;:11;:13::i;:::-;973:14;965:23;;;;;;;;995:5;;;;;;;;;;;:12;;;1008:10;995:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:24:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;995:24:4;;;;903:121::o;262:26:8:-;;;;:::o;1100:103:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;581:24:4:-;;;;;;;;;;;;;:::o;870:18:2:-;;;;;;;;;;;;;:::o;1504:180:8:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;1627:26;:52::i;:::-;1504:180;;:::o;5497:121:2:-;5569:7;5593:20;5608:4;;5593:10;:14;;:20;;;;:::i;:::-;5586:27;;5497:121;;;:::o;1214:123:10:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;4725:150:2:-;4828:42;4843:12;4857;4828:14;:42::i;:::-;4725:150;;:::o;5128:131::-;;;:::o;1554:87:4:-;1594:5;;;;;;;;;;;:13;;;1614:9;1625:10;1594:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:42:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1594:42:4;;;;;1554:87::o;3937:130:2:-;;;:::o;1215:445:1:-;1354:28;1483;1330:13;:11;:13::i;:::-;1327:299;;;1399:5;;;;;;;;;;;1354:51;;1414:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:30:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1414:30:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1414:30:1;;;;;;;;;;;;;;;;;1528:5;;;;;;;;;;;1483:51;;1545:14;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1545:24:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1545:24:1;;;;1578:14;:32;;;1611:6;;;;;;;;;;;1578:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1578:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1578:40:1;;;;1327:299;1634:20;:18;:20::i;:::-;1215:445;;:::o;1338:171:11:-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o;872:209:7:-;977:52;1004:12;1018:10;977:26;:52::i;:::-;1072:3;;1043:25;1057:10;1043:9;;:13;;:25;;;;:::i;:::-;:32;;1035:41;;;;;;;;872:209;;:::o;203:373:10:-;261:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;532:1;528;:5;524:9;;555:1;550;546;:5;;;;;;;;:10;539:18;;;;;;570:1;563:8;;203:373;;;;;:::o;503:168:6:-;626:5;;;;;;;;;;;612:25;;;638:12;652;612:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:53:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;612:53:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;612:53:6;;;;;;;;;;;;;;;;604:62;;;;;;;;503:168;;:::o;1308:159:4:-;1351:13;:11;:13::i;:::-;1347:89;;;1374:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1374:13:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1374:13:4;;;;1347:89;;;1408:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:21:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1408:21:4;;;;1347:89;1442:20;:18;:20::i;:::-;1308:159::o;3484:175:2:-;3621:1;3597:26;;:12;:26;;;;3589:35;;;;;;;;3652:1;3638:10;:15;;3630:24;;;;;;;;3484:175;;:::o;919:38:3:-;:::o",
  "source": "pragma solidity 0.4.24;\r\n\r\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\";\r\n\r\n\r\n\r\n\r\ncontract LarTokenCrowdsale is Crowdsale, MintedCrowdsale, CappedCrowdsale, TimedCrowdsale, RefundableCrowdsale {\r\n\r\n  constructor(\r\n    uint256 _rate,\r\n    address _wallet,\r\n    ERC20 _token,\r\n    uint256 _cap,\r\n    uint256 _openingTime,\r\n    uint256 _closingTime,\r\n    uint256 _goal\r\n  )\r\n    Crowdsale(_rate, _wallet, _token)\r\n    CappedCrowdsale(_cap)\r\n    TimedCrowdsale(_openingTime, _closingTime)\r\n    RefundableCrowdsale(_goal)\r\n    public\r\n  {\r\n    require(_goal <= _cap, \"Your goal cannot be greater than the maximum cap\");\r\n  }\r\n\r\n   /**\r\n   * @dev enables token transfers, called when owner calls finalize()\r\n  */\r\n  function finalization() internal {\r\n    // Any functionality after the end of the crowdsale is added here.\r\n    if(goalReached()) {\r\n      MintableToken _mintableToken = MintableToken(token);\r\n      _mintableToken.finishMinting();\r\n\r\n      // Unpause the token\r\n      PausableToken _pausableToken = PausableToken(token);\r\n\r\n      _pausableToken.unpause();\r\n      _pausableToken.transferOwnership(wallet);\r\n    }\r\n\r\n    super.finalization();\r\n  }\r\n\r\n}",
  "sourcePath": "C:\\Users\\LanreAkintayo\\Visual Studio code projects\\crowdsale_bsc\\contracts\\LARTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/Users/LanreAkintayo/Visual Studio code projects/crowdsale_bsc/contracts/LARTokenCrowdsale.sol",
    "exportedSymbols": {
      "LarTokenCrowdsale": [
        129
      ]
    },
    "id": 130,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 354,
        "src": "27:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 705,
        "src": "94:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 767,
        "src": "176:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 854,
        "src": "260:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 511,
        "src": "343:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 1405,
        "src": "433:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 1507,
        "src": "506:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 38,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 353,
              "src": "617:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$353",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "617:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 704,
              "src": "628:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$704",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "628:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 42,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 766,
              "src": "645:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$766",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 43,
            "nodeType": "InheritanceSpecifier",
            "src": "645:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 44,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 853,
              "src": "662:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$853",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 45,
            "nodeType": "InheritanceSpecifier",
            "src": "662:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 46,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 510,
              "src": "678:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$510",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 47,
            "nodeType": "InheritanceSpecifier",
            "src": "678:19:1"
          }
        ],
        "contractDependencies": [
          353,
          401,
          510,
          704,
          766,
          853,
          1093
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          510,
          401,
          1093,
          853,
          766,
          704,
          353
        ],
        "name": "LarTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1037:87:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1052:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1061:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1052:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220676f616c2063616e6e6f742062652067726561746572207468616e20746865206d6178696d756d20636170",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1067:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        },
                        "value": "Your goal cannot be greater than the maximum cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1771,
                        1772
                      ],
                      "referencedDeclaration": 1772,
                      "src": "1044:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:74:1"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 64,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "891:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "907:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1266",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 353,
                  "src": "881:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$353_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "881:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 69,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "936:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 70,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 68,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 766,
                  "src": "920:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$766_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "920:21:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 72,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57,
                    "src": "962:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "976:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 71,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 853,
                  "src": "947:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$853_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "1015:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "995:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$510_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "995:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "723:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "743:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "765:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1266",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 52,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1266,
                    "src": "765:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1266",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "784:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "803:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "830:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "857:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "716:159:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:1"
            },
            "scope": 129,
            "src": "705:419:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1248:412:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 90,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "1330:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1327:299:1",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1345:281:1",
                    "statements": [
                      {
                        "assignments": [
                          93
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 93,
                            "name": "_mintableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 128,
                            "src": "1354:28:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintableToken_$1404",
                              "typeString": "contract MintableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 92,
                              "name": "MintableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1404,
                              "src": "1354:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$1404",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 97,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1399:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 94,
                            "name": "MintableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "1385:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MintableToken_$1404_$",
                              "typeString": "type(contract MintableToken)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1385:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintableToken_$1404",
                            "typeString": "contract MintableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1354:51:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "_mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1414:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$1404",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finishMinting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1403,
                            "src": "1414:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:30:1"
                      },
                      {
                        "assignments": [
                          104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 104,
                            "name": "_pausableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 128,
                            "src": "1483:28:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableToken_$1506",
                              "typeString": "contract PausableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 103,
                              "name": "PausableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1506,
                              "src": "1483:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 108,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1528:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 105,
                            "name": "PausableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1514:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PausableToken_$1506_$",
                              "typeString": "type(contract PausableToken)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1514:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PausableToken_$1506",
                            "typeString": "contract PausableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1483:51:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 109,
                              "name": "_pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1545:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 912,
                            "src": "1545:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1545:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "1611:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 114,
                              "name": "_pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1578:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1069,
                            "src": "1578:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1578:40:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "1634:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_LarTokenCrowdsale_$129",
                          "typeString": "contract super LarTokenCrowdsale"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 493,
                      "src": "1634:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:20:1"
                }
              ]
            },
            "documentation": "@dev enables token transfers, called when owner calls finalize()\r",
            "id": 128,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:1"
            },
            "scope": 129,
            "src": "1215:445:1",
            "stateMutability": "nonpayable",
            "superFunction": 493,
            "visibility": "internal"
          }
        ],
        "scope": 130,
        "src": "587:1078:1"
      }
    ],
    "src": "0:1665:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/LanreAkintayo/Visual Studio code projects/crowdsale_bsc/contracts/LARTokenCrowdsale.sol",
    "exportedSymbols": {
      "LarTokenCrowdsale": [
        129
      ]
    },
    "id": 130,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 31,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 354,
        "src": "27:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 32,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 705,
        "src": "94:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 767,
        "src": "176:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 34,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 854,
        "src": "260:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 511,
        "src": "343:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 1405,
        "src": "433:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 130,
        "sourceUnit": 1507,
        "src": "506:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 38,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 353,
              "src": "617:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$353",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "617:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 704,
              "src": "628:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$704",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "628:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 42,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 766,
              "src": "645:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$766",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 43,
            "nodeType": "InheritanceSpecifier",
            "src": "645:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 44,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 853,
              "src": "662:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$853",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 45,
            "nodeType": "InheritanceSpecifier",
            "src": "662:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 46,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 510,
              "src": "678:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$510",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 47,
            "nodeType": "InheritanceSpecifier",
            "src": "678:19:1"
          }
        ],
        "contractDependencies": [
          353,
          401,
          510,
          704,
          766,
          853,
          1093
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129,
          510,
          401,
          1093,
          853,
          766,
          704,
          353
        ],
        "name": "LarTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1037:87:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1052:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1061:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1052:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f757220676f616c2063616e6e6f742062652067726561746572207468616e20746865206d6178696d756d20636170",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1067:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        },
                        "value": "Your goal cannot be greater than the maximum cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2e0769e4768c8a2528e7d15ea62950233b2ae56fb4e95c6e13f7f46edca7f8e",
                          "typeString": "literal_string \"Your goal cannot be greater than the maximum cap\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1771,
                        1772
                      ],
                      "referencedDeclaration": 1772,
                      "src": "1044:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:74:1"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 64,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "891:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 65,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "907:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1266",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 353,
                  "src": "881:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$353_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "881:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 69,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "936:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 70,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 68,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 766,
                  "src": "920:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$766_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "920:21:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 72,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57,
                    "src": "962:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "976:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 71,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 853,
                  "src": "947:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$853_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "1015:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 510,
                  "src": "995:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$510_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "995:26:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "723:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "743:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "765:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1266",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 52,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1266,
                    "src": "765:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1266",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "784:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "803:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "830:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "857:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "716:159:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:1"
            },
            "scope": 129,
            "src": "705:419:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1248:412:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 90,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "1330:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1327:299:1",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1345:281:1",
                    "statements": [
                      {
                        "assignments": [
                          93
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 93,
                            "name": "_mintableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 128,
                            "src": "1354:28:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintableToken_$1404",
                              "typeString": "contract MintableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 92,
                              "name": "MintableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1404,
                              "src": "1354:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$1404",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 97,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1399:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 94,
                            "name": "MintableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "1385:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MintableToken_$1404_$",
                              "typeString": "type(contract MintableToken)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1385:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintableToken_$1404",
                            "typeString": "contract MintableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1354:51:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "_mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1414:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableToken_$1404",
                                "typeString": "contract MintableToken"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finishMinting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1403,
                            "src": "1414:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:30:1"
                      },
                      {
                        "assignments": [
                          104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 104,
                            "name": "_pausableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 128,
                            "src": "1483:28:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PausableToken_$1506",
                              "typeString": "contract PausableToken"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 103,
                              "name": "PausableToken",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1506,
                              "src": "1483:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 108,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1528:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$1266",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 105,
                            "name": "PausableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1514:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PausableToken_$1506_$",
                              "typeString": "type(contract PausableToken)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1514:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PausableToken_$1506",
                            "typeString": "contract PausableToken"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1483:51:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 109,
                              "name": "_pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1545:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 912,
                            "src": "1545:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1545:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "1611:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 114,
                              "name": "_pausableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1578:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PausableToken_$1506",
                                "typeString": "contract PausableToken"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1069,
                            "src": "1578:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1578:40:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "1634:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_LarTokenCrowdsale_$129",
                          "typeString": "contract super LarTokenCrowdsale"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 493,
                      "src": "1634:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:20:1"
                }
              ]
            },
            "documentation": "@dev enables token transfers, called when owner calls finalize()\r",
            "id": 128,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:1"
            },
            "scope": 129,
            "src": "1215:445:1",
            "stateMutability": "nonpayable",
            "superFunction": 493,
            "visibility": "internal"
          }
        ],
        "scope": 130,
        "src": "587:1078:1"
      }
    ],
    "src": "0:1665:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2022-04-29T12:05:05.717Z"
}